{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAQ,CACVC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBAGxCH,EAAMC,KAAKM,iBAAiB,UAE5B,SAAkBC,G,kBAMV,IAAMC,EAAQC,EACdC,YAAW,WAiBnB,IAAuBC,EAAUC,GAAVD,EAhBGE,EAgBOD,EAhBJJ,EAiBlB,IAAIM,SAAQ,SAACC,EAAKC,GACCC,KAAKC,SAAW,GAElCH,EAAI,CAAEJ,WAAUC,UAEhBI,EAAI,CAAEL,WAAUC,S,KArBXO,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MACff,EAAAwB,OAAOC,QACH,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAGrDY,OAAM,SAAAJ,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MAChBf,EAAAwB,OAAOI,QACH,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,MAGxDH,GACHA,GAAgBiB,OAAO3B,EAAMK,UAAUuB,M,EAnB3CpB,EAAEqB,iBAIF,IAFA,IAAInB,EAAeiB,OAAO3B,EAAMI,WAAWwB,OAElCE,EAAI,EAAGA,GAAKH,OAAO3B,EAAMM,YAAYsB,OAAQE,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst elems = {\n    form: document.querySelector('.form'),\n    inputDelay: document.querySelector('input[name=\"delay\"]'),\n    inputStep: document.querySelector('input[name=\"step\"]'),\n    inputAmount: document.querySelector('input[name=\"amount\"]'),\n};\n\nelems.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n    e.preventDefault();\n\n    let timeOutDelay = Number(elems.inputDelay.value);\n\n    for (let i = 1; i <= Number(elems.inputAmount.value); i += 1) {\n        const delay = timeOutDelay;\n        setTimeout(() => {\n            createPromise(i, delay)\n                .then(({ position, delay }) => {\n                    Notify.success(\n                        `✅ Fulfilled promise ${position} in ${delay}ms`\n                    );\n                })\n                .catch(({ position, delay }) => {\n                    Notify.failure(\n                        `❌ Rejected promise ${position} in ${delay}ms`\n                    );\n                });\n        }, timeOutDelay);\n        timeOutDelay += Number(elems.inputStep.value);\n    }\n}\n\nfunction createPromise(position, delay) {\n    return new Promise((res, rej) => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n            res({ position, delay });\n        } else {\n            rej({ position, delay });\n        }\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$elems","form","document","querySelector","inputDelay","inputStep","inputAmount","addEventListener","e","delay1","timeOutDelay","setTimeout","position","delay","i","Promise","res","rej","Math","random","then","param","Notify","success","concat","catch","failure","Number","value","preventDefault","i1","_loop"],"version":3,"file":"03-promises.8c5a700d.js.map"}