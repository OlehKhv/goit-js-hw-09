{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAQ,CACVC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBAGxCH,EAAMC,KAAKM,iBAAiB,UAE5B,SAAkBC,GAGd,GAFAA,EAAEC,iBAGET,EAAMI,WAAWM,MAAQ,GACzBV,EAAMK,UAAUK,MAAQ,GACxBV,EAAMM,YAAYI,OAAS,EAM3B,OAJAZ,EAAAa,OAAOC,QACH,oEAEJZ,EAAMC,KAAKY,QAIf,IAAIC,EAAeC,OAAOf,EAAMI,WAAWM,OAE3C,IAAK,IAAIM,EAAI,EAAGA,GAAKD,OAAOf,EAAMM,YAAYI,OAAQM,GAAK,EAAG,CAC1D,MAAMC,EAAQH,EACdI,YAAW,KAiBnB,IAAuBC,EAAUC,GAAVD,EAhBGH,EAgBOI,EAhBJH,EAiBlB,IAAII,SAAQ,CAACC,EAAKC,KACrB,MAAMC,EAAgBC,KAAKC,SAAW,GAClCF,EACAF,EAAI,C,SAAEH,E,MAAUC,IAEhBG,EAAI,C,SAAEJ,E,MAAUC,GAAQ,KArBnBO,MAAK,EAACR,SAAEA,EAAQC,MAAEA,MACftB,EAAAa,OAAOiB,QACH,uBAAqBT,QAAiBC,MAAU,IAGvDS,OAAM,EAACV,SAAEA,EAAQC,MAAEA,MAChBtB,EAAAa,OAAOmB,QACH,sBAAoBX,QAAeC,MAAU,GAEnD,GACPN,GACHA,GAAgBC,OAAOf,EAAMK,UAAUK,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst elems = {\n    form: document.querySelector('.form'),\n    inputDelay: document.querySelector('input[name=\"delay\"]'),\n    inputStep: document.querySelector('input[name=\"step\"]'),\n    inputAmount: document.querySelector('input[name=\"amount\"]'),\n};\n\nelems.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n    e.preventDefault();\n\n    if (\n        elems.inputDelay.value < 0 ||\n        elems.inputStep.value < 0 ||\n        elems.inputAmount.value <= 0\n    ) {\n        Notify.warning(\n            'Please, enter correctly values: DELAY>=0; STEP>=0; AMOUNT>0'\n        );\n        elems.form.reset();\n        return;\n    }\n\n    let timeOutDelay = Number(elems.inputDelay.value);\n\n    for (let i = 1; i <= Number(elems.inputAmount.value); i += 1) {\n        const delay = timeOutDelay;\n        setTimeout(() => {\n            createPromise(i, delay)\n                .then(({ position, delay }) => {\n                    Notify.success(\n                        `✅ Fulfilled promise ${position} in ${delay}ms`\n                    );\n                })\n                .catch(({ position, delay }) => {\n                    Notify.failure(\n                        `❌ Rejected promise ${position} in ${delay}ms`\n                    );\n                });\n        }, timeOutDelay);\n        timeOutDelay += Number(elems.inputStep.value);\n    }\n}\n\nfunction createPromise(position, delay) {\n    return new Promise((res, rej) => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n            res({ position, delay });\n        } else {\n            rej({ position, delay });\n        }\n    });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$elems","form","document","querySelector","inputDelay","inputStep","inputAmount","addEventListener","e","preventDefault","value","Notify","warning","reset","timeOutDelay","Number","i","delay1","setTimeout","position","delay","Promise","res","rej","shouldResolve","Math","random","then","success","catch","failure"],"version":3,"file":"03-promises.a266b719.js.map"}